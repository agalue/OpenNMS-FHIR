version: '3.7'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    container_name: zookeeper
    hostname: zookeeper
    environment:
      TZ: America/New_York
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: echo stat | nc zookeeper 2181
      interval: 30s
      timeout: 5s
      retries: 3

  kafka:
    image: confluentinc/cp-kafka:5.5.0
    container_name: kafka
    hostname: kafka
    depends_on:
    - zookeeper
    environment:
      TZ: America/New_York
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.0.43:9092  # Use the external IP of the machine where Kafka is running
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_LOG_RETENTION_HOURS: 3
      KAFKA_LOG_ROLL_HOURS: 1
      JMX_PORT: 9999
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka -Dcom.sun.management.jmxremote.rmi.port=9999
    ports:
    - 9092:9092
    healthcheck:
      test: nc -z localhost 9092
      interval: 30s
      timeout: 5s
      retries: 3

  manager:
    image: hlebalbau/kafka-manager:2.0.0.2
    container_name: manager
    hostname: manager
    depends_on:
    - kafka
    ports:
    - 9000:9000 
    environment:
      TZ: America/New_York
      ZK_HOSTS: zookeeper:2181
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:9000 || exit 1
      interval: 1m
      timeout: 5s
      retries: 3

  database:
    container_name: database
    hostname: database
    image: postgres:12
    ports:
    - 5432:5432
    environment:
      TZ: America/New_York
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 3

  opennms:
    container_name: opennms
    hostname: opennms
    image: agalue/horizon:26.1.0-graphite
    depends_on:
    - database
    - kafka
    command: [ -s ]
    ports:
    - 8980:8980
    - 8101:8101
    volumes:
    - ./opennms-overlay:/opt/opennms-etc-overlay
    environment:
      TZ: America/New_York
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: curl -f -I http://localhost:8980/opennms/login.jsp
      interval: 1m
      timeout: 5s
      retries: 3

  # Parses CollectionSets with health data sent by the Kafka Producer and forwards them to Azure Event Hub
  # Make sure to set FORWARDER_EVENT_HUB_CONNECTION_STR on your host prior start the environment
  forwarder:
    container_name: forwarder
    hostname: forwarder
    image: agalue/fhir-eventhub-forwarder
    depends_on:
    - opennms
    environment:
      TZ: America/New_York
      BOOTSTRAP_SERVERS: kafka:9092
      SOURCE_TOPIC: metrics
      GROUP_ID: forwarder
      EVENT_HUB_CONNECTION_STR: ${FORWARDER_EVENT_HUB_CONNECTION_STR:?}

